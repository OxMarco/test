plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'com.google.dagger.hilt.android'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id ("org.jlleitschuh.gradle.ktlint") version "11.6.1"
    id 'com.google.devtools.ksp'
}

def keystorePropertiesFile = rootProject.file("key.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    namespace 'xyz.raincards'
    compileSdk 35

    def app = "RainPOS"
    def desc = "payment terminal firmware app"

    buildFeatures {
        viewBinding true
        buildConfig true
    }

    defaultConfig {
        applicationId "xyz.raincards"
        minSdk 26
        targetSdk 35
        versionCode 1000
        versionName "1.0.00"
    }

    applicationVariants.configureEach { variant ->
        variant.outputs.configureEach {
            outputFileName = "${app}_${variant.versionName}_${desc}.apk"
        }
    }

    signingConfigs {
        releaseConfig {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        debug {
            manifestPlaceholders = [crashlyticsCollectionEnabled: "false"]
            firebaseCrashlytics {
                mappingFileUploadEnabled false
            }
            ext.enableCrashlytics = false
            minifyEnabled false
        }
        release {
            manifestPlaceholders = [crashlyticsCollectionEnabled: "false"]
            firebaseCrashlytics {
                mappingFileUploadEnabled false
            }
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseConfig
        }
    }

    flavorDimensions "default"
    productFlavors {
        dev {
            applicationIdSuffix ".dev"
            resValue "string", "app_name", "RainPOS"
            buildConfigField 'boolean', 'IS_DEV', 'true'
        }
        prod {
            resValue "string", "app_name", "RainPOS"
            buildConfigField 'boolean', 'IS_DEV', 'false'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_21
        targetCompatibility JavaVersion.VERSION_21
    }
    kotlinOptions {
        jvmTarget = '21'
    }
}
tasks.getByPath("preBuild").dependsOn("ktlintFormat")

ktlint {
    android = true
    ignoreFailures = false
    disabledRules = ["final-newline", "no-wildcard-imports", "package-name", "annotation-spacing"]
    reporters {
        reporter "plain"
        reporter "checkstyle"
        reporter "sarif"
    }
}

dependencies {

    implementation libs.androidx.core.ktx
    implementation libs.androidx.appcompat
    implementation libs.material
    implementation libs.androidx.activity
    implementation libs.androidx.constraintlayout

    implementation libs.androidx.navigation.fragment.ktx
    implementation libs.androidx.navigation.ui.ktx

    implementation libs.androidx.lifecycle.process
    implementation libs.androidx.lifecycle.runtime.ktx

    // Glide
    implementation libs.glide

    // Dagger Hilt
    implementation libs.hilt.android
    ksp libs.hilt.compiler

    // Coroutines
    implementation libs.kotlinx.coroutines.core

    // Retrofit + GSON
    implementation libs.retrofit
    implementation libs.converter.gson

    //logging plugin
    implementation libs.okhttp
    implementation libs.logging.interceptor

    //firebase
    implementation platform(libs.firebase.bom)
    implementation libs.firebase.crashlytics.ktx
    implementation libs.firebase.config.ktx

    implementation libs.annotations

    // Room
    implementation libs.androidx.room.runtime
    ksp libs.androidx.room.compiler
    implementation libs.androidx.room.ktx

    //gson
    implementation libs.gson

    //tlv decoder
    implementation libs.emv.bertlv

    // Nexgo
    implementation(name: 'nexgo-smartpos-sdk-v3.08.006_20241216', ext: 'aar', group: 'nexgo', version: 'v3.08.006')
}

repositories {
    google()
    mavenCentral()
    flatDir {
        dirs "libs"
    }
}
